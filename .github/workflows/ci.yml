name: CI Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:  # Allow manual triggering

env:
  PYTHON_VERSION: "3.12"

jobs:
  lint:
    name: 🔍 Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🔍 Run linting
        run: make lint

  format:
    name: 🎨 Format Code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🎨 Check code formatting
        run: make format

  type-check:
    name: 🏷️ Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🏷️ Run type checking
        run: make type-check

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🧪 Run tests with coverage
        run: make test

      - name: 📊 Upload coverage reports
        if: matrix.python-version == '3.12'  # Only upload once
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  # Summary job that depends on all parallel jobs
  ci-success:
    name: ✅ CI Success
    runs-on: ubuntu-latest
    needs: [lint, format, type-check, test]
    if: always()
    steps:
      - name: ✅ Check all jobs succeeded
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "❌ One or more CI jobs failed!"
          echo "Lint: ${{ needs.lint.result }}"
          echo "Format: ${{ needs.format.result }}"
          echo "Type Check: ${{ needs.type-check.result }}"
          echo "Test: ${{ needs.test.result }}"
          exit 1

      - name: 🎉 All checks passed!
        run: |
          echo "✅ All CI jobs completed successfully!"
          echo "🔍 Lint: ${{ needs.lint.result }}"
          echo "🎨 Format: ${{ needs.format.result }}"
          echo "🏷️ Type Check: ${{ needs.type-check.result }}"
          echo "🧪 Test: ${{ needs.test.result }}"
