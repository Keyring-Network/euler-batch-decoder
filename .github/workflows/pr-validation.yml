name: 🔍 PR Validation

on:
  pull_request:

env:
  PYTHON_VERSION: "3.12"

jobs:
  # Quick validation jobs for PRs
  quick-checks:
    name: ⚡ Quick Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🔍 Quick lint check
        run: make lint

      - name: 🎨 Quick format check  
        run: make format

  # Full validation (runs all checks)
  full-validation:
    name: 🧪 Full Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies
        run: |
          uv sync --all-extras
          uv pip install -e .

      - name: 🔍 Run all checks
        run: make check

      - name: 🧪 Run tests
        run: make test

  # Code quality analysis
  code-quality:
    name: 📊 Code Quality
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: ⚡ Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: 📦 Install dependencies  
        run: uv sync --all-extras

      - name: 🏷️ Type checking
        run: make type-check

      - name: 📋 Generate coverage report
        run: |
          uv run --all-extras pytest tests/ --cov=evc_batch_decoder --cov-report=xml --cov-report=term-missing

      - name: 📊 Comment coverage report
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIMUM_GREEN: 95
          MINIMUM_ORANGE: 90

  # Draft PR message
  draft-pr-notice:
    name: 📝 Draft PR Notice
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == true
    steps:
      - name: 📝 Add draft notice
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📝 Draft Pull Request
              
              This PR is currently marked as **draft**. 
              
              Quality checks will run automatically once you mark it as **ready for review**.
              
              ### 🚀 When ready:
              1. Ensure all changes are complete
              2. Mark as "Ready for review"  
              3. Automated checks will validate your changes
              
              ---
              *This comment was automatically generated by the PR validation workflow.*`
            })
