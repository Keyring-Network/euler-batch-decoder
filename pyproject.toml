[project]
name = "evc-batch-decoder"
version = "0.1.0"
description = "Decode and analyze Ethereum Vault Connector (EVC) batch operations"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
  { name = "Keyring", email = "alex@keyring.network" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]

dependencies = [
    "click>=8.2.1",
    "rich>=14.1.0",
    "web3>=7.13.0",
]

[project.urls]
Documentation = "https://github.com/Keyring-Network/evc-batch-decoder#readme"
Issues = "https://github.com/Keyring-Network/evc-batch-decoder/issues"
Source = "https://github.com/Keyring-Network/evc-batch-decoder"

[project.optional-dependencies]
dev = [
  "ipython>=9.4.0",
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.21.0",
  "ruff>=0.0.285",
  "mypy>=1.5.0",
  "pylint>=3.0.0"
]


[project.scripts]
evc-decode = "evc_batch_decoder.cli:decode_batch"


[tool.ruff]
target-version = "py313"
line-length = 120

[tool.ruff.lint]
select = [
  "A",   # flake8-builtins
  "B",   # flake8-bugbear
  "C",   # flake8-comprehensions
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "Q",   # flake8-quotes
  "S",   # flake8-bandit
  "T",   # flake8-debugger
  "W",   # pycodestyle warnings
]
ignore = [
  "A003",  # builtin-attribute-shadowing
  "S101",  # assert-used
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S105",  # hardcoded-password-string (test tokens)
  "S106",  # hardcoded-password-func-arg (test tokens)
  "T201",  # print statements (integration tests need output)
  "F841",  # unused variables (test setup)
]
"evc_batch_decoder/*" = [
  "T201",  # print statements (necessary for error handling)
  "C901",  # complex-structure (some functions are inherently complex)
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--asyncio-mode=auto"

[tool.coverage.run]
source = ["evc_batch_decoder"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true
follow_imports = "silent"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = ["pydantic", "web3"]
ignore_missing_imports = true


